project: name, default (target), basedir
property
target: set of tasks e.g. all, compile, distribute
task: code that can execute (inside or outside target, thuong la inside)
  attributes
  built-in task: http://ant.apache.org/manual/tasklist.html - da so la su dung built-in task
    <tstamp/> => get the current time for later use e.g. ${DSTAMP}
  refer to another task in java: project.getReference("task1")

target vs taskdef vs task
  task: executable code (e.g. jacoco:report) - task is define in .jar file
  taskdef: add more tasks to current project - e.g. jacoco tasks (contains path to the jar file)
  target: ant run target, contains nhieu task e.g. ant all (all target contains tasks from taskdef in ${platformhome}/lib/ant-contrib-1.0b3.jar)

  
java agent
  what is it? is app that can intrude JVM, can modify bytecode at runtime
  entry point (of an agent): premain(String agentArgs, Instrumentation inst) - run this method after jvm is initialized
  metadata (of an agent): MANIFEST.MF - important
  to implement an java agent => need skills to change bytecode directly (e.g. insert println statement after call constructor) or using support lib e.g. Javaassist, ASM ...
    transformer: return (to JVM) the modified bytecode class
	Instrumentation (context): register transfomer class
  how to run?
    -javaagent:pathtotheagentjar file as jvm argument  
  
ant-sonar neo
  jenkins does
    set custom workspace: /codengai (no need link to git)
	./setantenv
	run ant tasks (at /platform directory)
	  load properties: sonar/build.properties (${platformhome}, ${project.base.test} ...)
	  jacocoalltests and jacocoallwebtests (defined in neo-tl/build/sonar/build.xml)
	    where is 'jacocoalltests' target defined?? - in acc-ant-sonar.xml (acceleratorservices extension) - this file is imported, final will be availabel in /platform/build.xml
	    what 'jacocoalltests' does? - taskdef source: jacocoant.jar
		  setup jacoco:agent => export file /log/junit/jacoco.exec => tuy con fig in jenkins ma se report classes nao
		  run ant alltests => all unit and integration tests will be run
	then copy the jacoco.exec to codengai/codengaicore
how jacoco work?
  using java on-the-fly instrument: mofify exsiting bytecode with running tests??? => default - ko choi duoc voi PowerMockitoRunner
  or using offline instrument
  java agent vs jacoco agent vs powermock agent (https://stackoverflow.com/questions/23363212/powermock-eclemma-coverage-issue)
    jacoco:agent is an ant task that create an agent
	powermockagent is also a javaagent

=> approach: offline instrument or @Powermockrule (PowerMockAgent - powermock-module-javaagent)
	    
	
	
	link to sonar queue (another plugin)
	
  
  
neo current ant unittests
cd /opt/codengai/hybris/hybris/bin/platform
. ./setantenv.sh

export PATH=$PATH:/opt/codengai/hybris/hybris/bin/platform/apache-ant-1.9.1

export SONAR_RUNNER_OPTS="-Xmx4096m -XX:MaxPermSize=512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5"

#ant clean build
#####cd /opt/codengai/hybris/hybris/bin/ext-accelerator/acceleratorservices/

# if DB not init yunit yet
#ant yunitinit 

# ant jacocoalltests  -Dtestclasses.extensions=codengaiASMstorefront,codengaibackoffice,codengaicockpits,codengaicore,codengaifacades,codengaiinitialdata,codengaiordermanagement,codengaistorefront  -Dtestclasses.packages=com.neo.*.Neo*   -Dtestclasses.packages_negative=com.neo.codengai.integration.AsnIntegrationTest

# if add addons then Maybe have some more points such as duplicated code

# copy to workspace so that jenkin plugin can understand
cp -f /var/lib/jenkins/workspace/DEV_BUILD_DEPLOY/build/sonar/build.* /opt/codengai/hybris/hybris/bin/custom/codengai/

##### Here !!!
ant jacocoalltests -Dspring.profiles.active=junit -Dtestclasses.extensions="codengaibackoffice,codengaicore,codengaifacades,codengaiinitialdata,codengaiordermanagement,codengaicsbackoffice,codengaiwhbackoffice" -Dtestclasses.packages="com.neo.codengai.*" -Dtestclasses.packages_negative="com.neo.codengai.services.inbound.impl.*,com.neo.codengai.widgets.*,com.neo.codengai.controllers.*" -Dtestclasses.suppress.junit.tenant=true -Dtestclasses.annotations="unittests"
ant jacocoallwebtests -Dspring.profiles.active=junit -Dtestclasses.extensions="codengaibackoffice,codengaicsbackoffice,codengaiwhbackoffice" -Dtestclasses.packages="com.neo.codengai.*"  -Dtestclasses.packages_negative="com.neo.codengai.services.inbound.impl.*,com.neo.codengai.widgets.*,com.neo.codengai.controllers.*" -Dtestclasses.suppress.junit.tenant=true -Dtestclasses.annotations="unittests"
cp /opt/codengai/hybris/hybris/log/junit/jacoco.exec /opt/codengai/hybris/hybris/bin/custom/codengai/codengaicore/jacoco.exec   