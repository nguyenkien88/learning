https: the data (including form) is encrypted before sent
pseudo-class
  define a state of an html element at specific time
  used to style e.g. a:visited {color:red}, validate form, checkbox/radio select...
  :hover
  :focus
  :active
  :required/:optional
  all: https://www.w3schools.com/css/css_pseudo_classes.asp

html form
  structure a form
    screen reader?
    <form>: no nested
    form control can be outside the form: them attr form="formId"
	<fieldset> and <legend>
	<section>
	<ul>, <ol>, <li>
	<label for=""> and <label><input></label>
  form control (input/textarea/button/select)
    cuoi cung thi data send to server as: name(name attr)/value pair
	readonly(sent with other form data) vs disable (is not sent to server)
    once the form is submitted all form controls that have a name attribute are sent except non-selected checkable(checkbox and radio)
  <input>
	text(default and fallback if browser not support a type)
	password
	hidden (hidden ui, data still sent to server)
	checkbox
	radio
	button/submit/reset: act same as a button - khac nhau o style and the label content
	img: like <img> but can be used to submit the form
	file: accept="image/*;capture=camera" => mobile use cam
	html5: differ from how browser support enter value and validate when submit(e.g. not validate when click e type="button")
	  email: pattern
	  search: differ with text on how browser support e.g. style and auto save to autocomplete
	  tel: browser on smart device can support by auto using numberic keypad
	  url: with protocol
	  number: min/max/step
	  range: use along with <output>
	  date, time: date/time/month/week/datetime-local: support differ between browser - thuong dung lib - https://flatlogic.com/blog/best-javascript-date-picker-libraries/
	  color: 
  <select>
    <option>: if not specify value attr => use content to submit
	selected
	optgroup: grouping
	multiple
  <datalist id="thesuggestionlist">: autocomplete, use along with <input list="thesuggestionlist">
  <progress>/<meter>: dynamic by js
  <button>: type=submit/reset/button(use js to handle submit)
  
form styling: https://developer.mozilla.org/en-US/docs/Learn/Forms/Styling_web_forms

client side validation: good for user experience, used combine with server validation
  2 types: built-in validation e.g. input type="email" and custom validation using js
  built-in
    required
	minlength/maxlength
	min/max
	type
	pattern
	when an element is valid/invalid, the pseudo-class :valid/:invalid(st other pseudo-class is added) auto added to the element e.g. input:valid
  js: e.g. customize the validation message: with or without using Constraint Validation API
	with Constraint Validation API
	  use along with aboves built-in validation attributes
	  e.g. add inputlistener -> if(!email.validity.valid) => if(if(email.validity.valueMissing)){errorSpan.textContext='er ne'}
    without Constraint Validation API (without using built-in validation attrs): it's better using lib e.g. Validate.js
	  
submit form
  if the action is https, the page is not => still encrypted
  if the page is https, the action is not => browser auto notify user
  submmit form with GET method (GET method is empty body) => the input auto show on url
  submit as normal: full page reload
    using input/buton type = submit
	js: formElement.submit()
  submit using ajax
    must manually handle response
	2 ways
      using XMLHttpRequest: mannual build the request and send (can specify synchronous request but not recommended)
	  using XMLHttpRequest and FormData(create or bind from an existing html form): XHR.send(aFormData);

FormData
  can submit type String or Blob or File
  using FormData with file attach: need to read the file manually then append to the FormData




building custom form controls
ajax
  submit FormData with ajax
display fields error and global error  
validation message
  normal form submit: flash message
  ajax: handle using javascript


