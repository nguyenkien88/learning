SI is all about messaging transformation
overview
  EAI: enterprise application integration main functions
    transform data (format)
  EIP: Enterprise Integration Patterns
  is a spring project for integration purpose - sharing data between applications
  based on spring design (core, patterns)
  message-driven

  
terms
  message: data transferd by SI, includes
    header
    payload
  endpoint: components that push (producer)/consume(consumer) message from a channel, producer/consumer can be
    Adapters
    Gateways or
    Filters or
    Transformers or
    Enrichers or
    Service Activators or
    Routers
  message channel: connect enpoints, types
	or publish subcribe/subscribable channel: thuong dung cho event message, no queue (no buffer), just push the message to all subscribers
    point to point/pollable channel: thuong dung cho document message, queued (has buffer), push message to single subscriber (neu co nhieu => get thang dau tien), khi nao queue empty thi code moi chay tiep
	direct channel: 1 subscriber, no queue (lai giua 2 cai tren)
  adapter: endpoint to connect channel with external system e.g database (your code should not know about the external system, let Spring take care of)
    has 2 types: inbound and outbound
    some built-in adapter: Stream (ex: stdin, stdout...), file, jdbc, mail...
	can build custom adapter
  filter: sit between channels, filter messages through channels e.g. only accept json message, only accept messagens contains sales data
    decide based on header or payload of the message
	use built-in by Spring 
	  expression filter
	  xpath filter
	  xml filter
	or build custom filter (message selector)
	can have optional channel to get the discarded messages: discard-channel
	
    
    
  
    
	
	
