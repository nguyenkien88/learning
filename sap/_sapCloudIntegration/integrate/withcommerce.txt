Integration API Module
overview
  say, integrate sap commerce with other services e.g. hana, erp (backend)...using 2 types of middleware
    scpi(recommended)
    or data hub
  integrate what?
    master data: product, address, customer....
    processes: e.g. sap commerce for front end, erp for order processing
    features: leverage features between services/products
  core module
    includes extentions: for all type of integration - setting up communication between SAP Commerce and the SAP back end
      sapcore
      sapcorebol
      sapcoreconfiguration
      sapcorejco
      sapcoreodata
      sapcoreaddon AddOn
      sapcoretest
      others extentions depend on specific integration: https://tinyurl.com/vpxwj9v7
  built-in commerce implementation to integration with scpi: master data, order, order transaction with sap hana, erp, crm
  enabel request monitoring for Integration Tool: https://tinyurl.com/3fhyynre

scenario
  outbound e.g. when customer register in storefront then replicate to SAP ERP
    commerce send integrationobject to scpi-ODataService (using rest -> can test with json) -> mapping/process -> send to external (soap/rest)
  inbound e.g. replicate product, stock from DBM
    external system send data to integration (soap/rest...) -> process/mapping -> send integrationobject to commerce-OData

implementation
  there are some built in implemetation for customer, product, order.
  see all integation objects: https://localhost:9002/odata2webservices/IntegrationService/IntegrationObjects
  integration object
    central of Integration API
	the structure 
	  for inbound
	    should base on items.xml structure, let ootb set correct reference 
	    e.g. replicate Product -> need set correct for catalog version, unit
	    thuong se di 1 root model item, need to create new wrapper model if needed e.g. SAPCpiOutboundOrder
	  for outbound
	    same or can be more flexible: because just need to send data out (can use message mapping to map with external structure)
		
	can create using
      mannual impex
  	  or backoffice => generate to impex (recommended)
  	  or api e.g. POST https://localhost:9002/odata2webservices/IntegrationService/IntegrationObjects see: https://tinyurl.com/526bkyka
	
	represents many things
      the payload container
	  and exposed OData endpoints: GET/POST/DELETE (let external system get/insert data to hybris) - note: the outbound and inbound expose the same apis
	    say, i create an integration object with code ExampleProduct with root is Product type and items are Catalog and Catalog Version,
		and item attributes of those items, then i get ODataServices as following
		GET endpoint
		  e.g. https://localhost:9002/odata2webservices/ExampleProduct show the integration object
		  or https://localhost:9002/odata2webservices/ExampleProduct/Products show products
		  or https://localhost:9002/odata2webservices/ExampleProduct/Catalogs show catalogs
		  or https://localhost:9002/odata2webservices/ExampleProduct/Products('Staged|tmpProductCatalog|23210') to get Product with the integration key
		  refer: https://tinyurl.com/yw7d8u66
	    POST endpoint: enable to persist root item into commerce with rest request (payload is the integrationobject data)
		   e.g https://localhost:9002/odata2webservices/ExampleProduct/Products for ExampleProduct
		   refer: https://tinyurl.com/ycpf52rf
		DELETE endpoint: notice isPartOf
	  and EDMX Schema
	  	
  	config: https://tinyurl.com/abyspehs - effect to geneated edmx
	  isUnique: from item type or integrationObjectItemAttribute
	  autoCreate vs partOf

outbound API (vs outbound sync)
  define integration object, ConsumedDestination
  then use IntegrationObjectConversionService to convert the system model to payload
  and OutBoundServiceFacade.send()
  modify request header and payload with decorator
    add to outboundRequestDecoratorList
	or define new one for only needed facade code
	
sample outbound flow: INT-121 - after place order, if customer dmbid is null => send request to create in dbm
  when place order e.g. order-process.xml
  will call updateCustomerDBMID to execute action
  that will call TmpSapCpiIntegrationOutboundService.createDbmCustomer()
    does convert from CustomerModel to SAPCpiOutboundDbmCustomerModel (map with external dbm customer)
	that will call TmpSapCpiOutboundService.createDbmCustomer to send [the model] with [integationobjectcode] to [a ConsumedDestination]
	  that will construct the HttpEntity (sping object that represents a request/response entity, consisting of headers and body) with payload is built from related integationobjectcode and the related model
	  and call REST(spring RestTemplate - a REST client api) then return ResponseEntity object (if synchronous message)
  that will call matched scpi OdataService

sample inbound flow: INT-031 - C4C sends VSQ to commerce
  c4c send soap request with an endpoint in /wsdl/vsq.wsdl
  scpi will catch the request 
    and mapping to correct ODataService
	then set Pre-Persist-Hook e.g. tmpSapCpiVSQPersistenceHook - to run before the integration object is saved
    then send to commerce ODataService e.g. /TmpVSQs
  commerce ODataService will handle the request
    and saved the integration object 
	  that will trigger PersistenceHandler
	  which will call tmpSapCpiVSQPersistenceHook to get data from the integration object e.g. TmpVSQModel - getOrder -> save Order status
	
speedup with
  groovy script to send outbound request
  	

extend IntegrationObject?
outbound sync?  
 
	
	
	