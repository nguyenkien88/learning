overview
  say, integrate sap commerce with other services e.g. hana, erp (backend)...using 2 types of middleware
    scpi(recommended)
    or data hub
  integrate what?
    master data: product, address, customer....
    processes: e.g. sap commerce for front end, erp for order processing
    features: leverage features between services/products
  core module
    includes extentions: for all type of integration - setting up communication between SAP Commerce and the SAP back end
      sapcore
      sapcorebol
      sapcoreconfiguration
      sapcorejco
      sapcoreodata
      sapcoreaddon AddOn
      sapcoretest
      others extentions depend on specific integration: https://tinyurl.com/vpxwj9v7
  built-in commerce implementation to integration with scpi: master data, order, order transaction with sap hana, erp, crm

scenario
  outbound e.g. when customer register in storefront then replicate to SAP ERP
    commerce send data to scpi-ODataService (using outbound integration object) -> process -> send to external (soap/rest)
  inbound e.g. replicate product, stock from DBM
    external system send data to integration (soap/rest...) -> process -> send to commerce-OData

implementation
  there are some built in implemetation for customer, product, order.
  integration object
    each integration object is map to 1 ODataService
    can create using
      impex
  	backoffice
  	or api e.g. POST https://localhost:9002/odata2webservices/IntegrationService/IntegrationObjects
  	  see: https://tinyurl.com/526bkyka
    then generate edmx: xml file that define an entity data model - is used by scpi to prepare data before import to commerce or send data out
      /integrationObject/$metadata or using backoffice e.g. https://localhost:9002/odata2webservices/OutboundVehicleOnboarding/$metadata
  	config: https://tinyurl.com/abyspehs
    create integation object with rest request e.g. https://localhost:9002/odata2webservices/InboundProduct/Products 
	
sample outbound flow: INT-121 - after place order, if customer dmbid is null => send request to create in dbm
  when place order e.g. order-process.xml
  will call updateCustomerDBMID to execute action
  that will call TmpSapCpiIntegrationOutboundService.createDbmCustomer()
    does convert from CustomerModel to SAPCpiOutboundDbmCustomerModel (map with external dbm customer)
	that will call TmpSapCpiOutboundService.createDbmCustomer to send [the model] with [integationobjectcode] to [a ConsumedDestination]
	  that will construct the HttpEntity (sping object that represents a request/response entity, consisting of headers and body) with payload is built from related integationobjectcode and the related model
	  and call REST(spring RestTemplate - a REST client api) then return ResponseEntity object (if synchronous message)
  that will call matched scpi OdataService

sample inbound flow: INT-031 - C4C sends VSQ to commerce
  c4c send soap request with an endpoint in /wsdl/vsq.wsdl
  scpi will catch the request 
    and mapping to correct ODataService
	then set Pre-Persist-Hook e.g. tmpSapCpiVSQPersistenceHook - to run before the integration object is saved
    then send to commerce ODataService e.g. /TmpVSQs
  commerce ODataService will handle the request
    and saved the integration object 
	  that will trigger PersistenceHandler
	  which will call tmpSapCpiVSQPersistenceHook to get data from the integration object e.g. TmpVSQModel - getOrder -> save Order status
	
	
	
  
	
	
	